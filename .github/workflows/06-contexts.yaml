name: 06-contexts
run-name: 06 - Contexts | Debug - ${{ inputs.debug }}
on:
  workflow_dispatch:
    # inputs allow for modifiable configurations before running a workflow
    inputs:
      debug:
        type: boolean
        default: false
env:
  MY_WORKFLOW_VAR: "workflow"
  MY_OVERWRITTEN_VAR: "workflow"
jobs:
  echo-data:
    runs-on: ubuntu-latest
    env:
      MY_JOB_VAR: 'job'
      MY_OVERWRITTEN_VAR: 'job'
    steps:
      - name: Display Information
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "SHA: ${{ github.sha }}"
          echo "Actor: ${{ github.actor }}"
          echo "Workflow: ${{ github.workflow }}"
          echo "Run ID: ${{ github.run_id }}"
          echo "Run Number: ${{ github.run_number }}"
      - name: Retrieve Variable
        run: |
          echo "${{ vars.MY_VAR }}"
      - name: Print Env Variables
        env:
          MY_OVERWRITTEN_VAR: 'step'
        # MY_OVERWRITTEN_VAR will output 'step'
        run: |
          echo "Workflow env: ${{ env.MY_WORKFLOW_VAR }}"
          echo "Overwritten env: ${{ env.MY_OVERWRITTEN_VAR }}"
  echo-data-2:
    runs-on: ubuntu-latest
    steps:
      - name: Display env variables via shell command
        # This still works, but outputs 'workflow' instead of 'step' since the variables that overwrites
        # are not defined under this job
        run: |
          echo "Workflow env: $MY_WORKFLOW_VAR"
          echo "Overwritten env: $MY_OVERWRITTEN_VAR"
  
  